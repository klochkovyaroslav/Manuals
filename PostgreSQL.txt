\\\\\\\\\\\\\\\\\\ Centos 7 \\\\\\\\\\\\\\\\\\\\\\\\\\\\\

	Добавить официальный репозиторий PostgreSQL:
yum -y install https://download.postgresql.org/pub/repos/yum/9.6/redhat/rhel-7-x86_64/pgdg-centos96-9.6-3.noarch.rpm

	Выполнить установку сервера PostgreSQL CentOS 7 версии 9.6:
yum -y install postgresql96-server postgresql96-contrib pgagent_96


	Инициализировать необходимую БД:
postgresql-setup --initdb
или
/usr/pgsql-9.6/bin/postgresql96-setup initdb

	Настройка PostgreSQL-9.6:
/var/lib/pgsql/9.6/data/postgresql.conf
listen_addresses = '*'

/var/lib/pgsql/9.6/data/pg_hba.conf
host    all             all             0.0.0.0/0               md5

systemctl status postgresql-9.6
systemctl enable postgresql-9.6 
systemctl enable postgresql-9.6 --now  # В Centos 8 сразу можно запустить службу опцией: --now
systemctl start postgresql-9.6




\\\\\\\\\\\\\\\\\\ Debian \\\\\\\\\\\\\\\\\\\\\\\\\\\\\

 sudo apt-get remove --purge postgresql-1* -y

	Команда для установки репозитория Debian:
sudo sh -c 'echo "deb http://apt.postgresql.org/pub/repos/apt $(lsb_release -cs)-pgdg main" > /etc/apt/sources.list.d/pgdg.list'

	Добавить Ключ для Debian:
wget --quiet -O - https://www.postgresql.org/media/keys/ACCC4CF8.asc | sudo apt-key add -

sudo apt update && sudo apt upgrade

sudo apt-get install postgresql-14 postgresql-contrib

или 

sudo apt update && sudo apt upgrade
sudo apt install postgresql postgresql-contrib





sudo systemctl status postgresql


	Настройка для подключение к удаленному серверу PostgreSQL

В файле конфигурации(postgresql.conf) раздел "CONNECTIONS AND AUTHENTICATION"

sudo nano /etc/postgresql/13/main/postgresql.conf

#listen_addresses = 'localhost'         # what IP address(es) to listen on;
Добавить:
listen_addresses = '*' 

	
Редактируем файл pg_hba.conf
sudo nano /etc/postgresql/13/main/pg_hba.conf

Вместо:
# IPv4 local connections:
host    all             all             127.0.0.1         md5

Вписываем:
# IPv4 local connections:
host    all             all             0.0.0.0/0         md5


Перезапустите службу Postgres
sudo systemctl stop postgresql
sudo systemctl start postgresql
sudo systemctl status postgresql


	Создать нового пользователя(Роль) и создать новую базу. 
	Подключаемся к Postgresql
sudo -u postgres psql

CREATE USER workspad;
\du

	Сменить пароль пользователю 
ALTER USER workspad WITH ENCRYPTED PASSWORD 'W0rk$p@oI';

	Включить в группу postgres:
GRANT postgres TO workspad;
\du

	Исключить из группы postgres:
REVOKE postgres FROM workspad;

create database "WorksPad";
\l

	Предоставить все привилегии на базу WorksPad для роли: workspad

GRANT ALL PRIVILEGES ON DATABASE WorksPad TO workspad;

	Вывести все таблицы в PostgreSQL:
	подключиться к этой БД
\connect workspad
\dt

Вывести список табличных пространств:
\db


Создать таблицу
create table tab01 (col01 int, col02 varchar(20));
/d

Добавить в таблицу tab01 записи:
insert into tab01 values (1, 'Ivan'),(2, 'Maxim');



Создание ролей-Пользователь
Пользователь — роль с правом входа
CREATE my_user my_user LOGIN;
или
CREATE USER my_user;
или
createuser my_user

Группа — роль без права входа (как правило)
CREATE my_user my_user;
или
createuser --no-login my_user


Удаление роли-Пользователь
DROP my_user my_user;
или
dropuser my_user

create database my_database;
\list или \l
drop database my_database;
\q

 или из bash
sudo dropdb my_database
 
GRANT ALL PRIVILEGES ON DATABASE my_database TO my_user;


Вывести все таблицы в PostgreSQL
подключиться к этой БД
\connect your_DB
\dt




psql -U sphone -d sphone -h 127.0.0.1
select * from license;

\q

\\\\\\\\\\\\\\\\\\ Резервное копирование  pg_dump \\\\\\\\\\\\\\\\\\\\\\\\\\\\\


Восстановить Дамп БД sphone
pg_restore -h 127.0.0.1 -p 5432 -U sphone -F c -d sphone /opt/distr/sphone.backup.sp445.2021.08.26

Сделать Дамп таблицы license в БД sphone
pg_dump -h 127.0.0.1 -p 5432 -U sphone --table=license -Fc --file=license.Fc.dump sphone

Восстановить Дамп таблицы license в БД sphone
pg_restore -h 127.0.0.1 -p 5432 -U sphone -d sphone -Fc /opt/distr/license.Fc.dump

select "License" from public."ServerInfo";

sudo pg_dump -h 127.0.0.1 -p 5432 -U workspad --table="public.\"ServerInfo\"" -Fc --file=ServerInfo.Fc.dump WorksPad

W0rk$p@oI


Пример:
Создаем дамп
sudo pg_dump sphone > /tmp/back/sphone.dump

Можно простостреть содержимое дампа
sudo vi /tmp/back/sphone.dump


Создаем новую базу - Восстанавливаемся из дампа в новую базу
sudo createdb sphone_new
sudo psql sphone_new < /tmp/back/sphone.dump


Если были ошибки при восстановлении из дампа утилитой psql:
Можно делать остановку восстановления дампа используя ключ:
--set ON_ERROR_STOP=on
или восстанавливать в отдной транзакции используя ключ:
-1
или --single-transaction

sudo psql -1 sphone_new < /tmp/back/sphone.dump


\\\\\\\\\\\\\\\\\\ Резервное копирование средствами файловой системы \\\\\\\\\\\\\\\\\\\\\\\\\\\\\

1 Остановка службы
2 Копирование
3 Запуск службы

sudo systemctl stop postgresql.service

Создаем архив:
sudo tar -cjf backup.tar.bz /tmp/back/


Для Восстанавления:
Удаляем все из: 
sudo rm -rf /var/lib/pgsql/data/*

Посмотреть что лежит в архиве:
sudo tar -tf /tmp/back/backup.tar.bz | head

Восстанавливаем из архива:
sudo tar -xf /tmp/back/backup.tar.bz
sudo ls -l /var/lib/pgsql/data/

sudo systemctl start postgresql.service



\\\\\\\\\\\\\\\\\\ Резервное копирование - Непрерывная архивация \\\\\\\\\\\\\\\\\\\\\\\\\\\\\

Для настройки архивания нужно предварительно сконфигурировать postgresql.conf
Директивы:  wal_level, archive_mode, archive_commamd

sudo mkdir archive_{c,b}

Правим файл:
sudo vi data/postgresql.conf

wal_level=replica
archive_mode=on
archive_commamd= 'test ! -f /var/lib/pgsql/archive_c/%f && cp %p /var/lib/pgsql/archive_c/%f'

sudo systemctl restart postgresql.service

Для проверки что все заработало смотрим:

sudo ls -l /var/lib/pgsql/archive_c
Сначала должно быть пусто, а в каталоге 

sudo ls -l /var/lib/pgsql/data/pg_wal
Должен находиться первый файл журнала вида :000000010000000000000001

Если еще раз перезапустить службу 
sudo systemctl restart postgresql.service

sudo ls -l /var/lib/pgsql/archive_c
Видим что файл журнала закрылся и был сброшен в каталог для архивации
А в файле
sudo ls -l /var/lib/pgsql/data/pg_wal
появтлся новый файл для архивации: 000000010000000000000001

    ## Процедура архиванции настроена.
    
## Процедуда создания базовой резервной копии (pg_basebackup).

Заходим под пользователя postgres
su - postgres
ls archeve_b #Каталог для базовой резевной копии

Создаем базовую резевную копию
pg_basebackup -D archeve_b/ Ft -z
ls archeve_b



## Процедуда восстановления из резервной копии.

sudo systemctl stop postgresql.service

Заходим под пользователя postgres
su - postgres
cd data

Удалить все содержимое
rm -rf *

Для восстановления нужно воспользоватьс архивом
cp ../archive_b/base.tar.gz .

Распоковать архив
tar -xf base.tar.gz

Сам архив можно уже удалить
rm base.tar.gz

Далее нужно восстановить каталог "pg_wal"
cd pg_wal
cp ../../archeve_b/pg_wal.tar.gz
tar -xf pg_wal.tar.gz

Сам архив можно уже удалить
rm pg_wal.tar.gz

ls ~/archive_c

Копируем нужный файл журнала в даннй ситуации это: 000000010000000000000004
cp ~/archive_c/000000010000000000000004 .
exit

sudo systemctl start postgresql.service
Восстановление закончено














